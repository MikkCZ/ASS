<?php

/**
 * GalleriesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @author Michal Stanke <michal.stanke@mikk.cz>
 */
class GalleriesTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object GalleriesTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Galleries');
    }

    /**
     * Returns the latest galleries in an array.
     * 
     * @param integer $number how many galleries should be returned
     * @return array latest galleries
     */
    public function getLatestGalleries($number) {
        $q = Doctrine_Query::create()
                ->select('g.id, g.name, f.thumbname')
                ->from('galleries g')
                //->where('g.public = ?', '1')
                ->orderBy('g.uploaded DESC')
                ->limit($number)
                ->leftJoin('g.Fotos f');
        return $q->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
    }

    /**
     * Return total number of galleries which are owned by the given user.
     * 
     * @param Users $user user
     * @return integer number of galleries owned
     */
    public function getCountForUser(Users $user) {
        $q = Doctrine_Query::create()
                ->select('COUNT(g.id) count')
                ->from('galleries g')
                ->where('g.user_id = ?', $user->getID());
        $array = $q->fetchArray();
        return intval($array[0]['count']);
    }

    /**
     * Returns all galleries of the specified user in an array.
     * 
     * @param Users $user galleries owner
     * @return array galleries
     */
    public function getForUser(Users $user, $page = 0, $limit = 10) {
        $q = Doctrine_Query::create()
                ->select('g.id, g.name, g.uploaded, g.description, f.thumbname')
                ->from('galleries g')
                //->where('g.public = ?', '1')
                ->where('g.user_id = ?', $user->getID())
                ->orderBy('g.uploaded DESC')
                ->limit($limit)
                ->offset($page * $limit)
                ->leftJoin('g.Fotos f');
        return $q->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
    }

    /**
     * Returns the Galleries instance according to the gallery id.
     * 
     * @param integer $id id of the requested gallery
     * @return Galleries gallery
     */
    public function getByID($id) {
        $q = Doctrine_Query::create()
                ->from('galleries g')
                ->where('g.id = ?', $id);
        return $q->fetchOne();
    }

}
