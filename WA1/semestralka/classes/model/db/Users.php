<?php

/**
 * Users
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author Michal Stanke <michal.stanke@mikk.cz>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Users extends BaseUsers {

    const MIN_PASSWORD_LENGTH = 6;

    public function getID() {
        return $this->id;
    }

    public function getRoleID() {
        return $this->role_id;
    }

    public function setRoleID($id) {
        $this->role_id = $id;
    }

    private function getRole() {
        return RolesTable::getInstance()->getForUser($this);
    }

    public function setUserName($username) {
        $this->username = $username;
    }

    public function getUserName() {
        return $this->username;
    }

    public function setPassword($password) {
        if (strlen(utf8_decode($password)) < self::MIN_PASSWORD_LENGTH) {
            
        }
        $this->password = crypt($password);
    }

    public function setEmail($email) {
        $this->email = $email;
    }

    public function getEmail() {
        return $this->email;
    }

    public function getName() {
        return $this->name;
    }

    public function setName($name) {
        $this->name = $name;
    }

    /**
     * Checks the password is correct for the user.
     * 
     * @param string $password
     * @return boolean true if correct
     */
    public function login($password) {
        return (crypt($password, $this->password) == $this->password);
    }

    /**
     * Return the public name of the user - $username when real name is not set.
     * 
     * @return string name to be shown
     */
    public function getPublicName() {
        $name = $this->getName();
        if ($name == NULL) {
            $name = $this->getUserName();
        }
        return $name;
    }

    public function isAdmin() {
        $role = $this->getRole();
        return $role->isAdmin();
    }

    public function allGalleries() {
        $role = $this->getRole();
        return $role->allGalleries();
    }

}
